---
format:
  html: {toc: true, theme: spacelab}
highlight-style: solarized

---

<style>
.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style>

<script src="https://cdn.jsdelivr.net/npm/vega@5" type="text/javascript"></script><script src="https://cdn.jsdelivr.net/npm/vega-lite@5" type="text/javascript"></script><script src="https://cdn.jsdelivr.net/npm/vega-embed@6" type="text/javascript"></script><script src="portal-main.js" type="text/javascript"></script>
# Analysing git logs in babashka

![babashka](https://avatars.githubusercontent.com/u/64927540?s=200&v=4){height=128}
![claykind](https://raw.githubusercontent.com/scicloj/graphic-design/live/icons/Clay.svg){height=128}
![portal](https://raw.githubusercontent.com/djblue/portal/master/resources/splash.svg){height=128}
![quarto](https://avatars.githubusercontent.com/u/67437475?s=200&v=4){height=128}

In this notebook, we will analyze our git log.
We will check how many commits we have had on each day
and will plot the results as a time series.

## Setup

This is a Babashka Kindly notebook

that gets rendered in Claykind

as a Quarto document

with embedded Portal viewers.

```clojure
(require '[scicloj.kindly.v4.kind :as kind])
```
<div class="printedClojure">
```clojure
nil

```
</div>

```clojure
(defn pr-str-with-meta [value]
(binding [*print-meta* true]
  (pr-str value)))
```
<div class="printedClojure">
```clojure
"#'user/pr-str-with-meta"

```
</div>

```clojure
(defn portal-widget [value]
(kind/hiccup
 [:div
  [:script (str "portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {\"mime\": \"x-application/edn\",
                 \"text\": (() => " (pr-str (pr-str-with-meta value)) ")}
                , document.currentScript.parentElement);")]]))
```
<div class="printedClojure">
```clojure
"#'user/portal-widget"

```
</div>

## Data preparation

```clojure
(def git-log
(-> (shell/sh "git" "log" "--date=format:%Y-%m-%d")
    :out
    (str/split #"\n")
    kind/pprint))
```
<div class="printedClojure">
```clojure
"#'user/git-log"

```
</div>

```clojure
(def dates-and-freqs
(->> git-log
     (filter (partial re-matches #"^Date:.*"))
     (map (fn [line]
            (-> line
                (str/replace #"Date:   " ""))))
     frequencies
     (map (fn [[date freq]]
            {:date date
             :freq freq}))
     (sort-by :date)))
```
<div class="printedClojure">
```clojure
"#'user/dates-and-freqs"

```
</div>

## Data exploration

```clojure
(-> dates-and-freqs
(with-meta {:portal.viewer/default
            :portal.viewer/table})
portal-widget)
```
<div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/table} ({:freq 1, :date \"2023-08-08\"} {:freq 2, :date \"2023-08-14\"} {:freq 1, :date \"2023-08-17\"} {:freq 2, :date \"2023-08-18\"} {:freq 9, :date \"2023-08-19\"} {:freq 1, :date \"2023-08-20\"} {:freq 5, :date \"2023-08-21\"} {:freq 2, :date \"2023-08-22\"} {:freq 1, :date \"2023-08-23\"} {:freq 1, :date \"2023-09-11\"} {:freq 4, :date \"2023-09-12\"} {:freq 3, :date \"2023-09-13\"} {:freq 3, :date \"2023-09-14\"} {:freq 3, :date \"2023-09-15\"} {:freq 9, :date \"2023-09-18\"} {:freq 4, :date \"2023-09-19\"} {:freq 7, :date \"2023-09-20\"})")}
                , document.currentScript.parentElement);</script></div>
## Plotting

```clojure
(def freqs-plot
(kind/vega-lite
 {:data {:values dates-and-freqs}
  :mark :bar
  :encoding {:x {:field :date
                 :type :temporal}
             :y {:field :freq
                 :type :quantitative}}
  :width :container
  :height 200
  :background :floralwhite}))
```
<div class="printedClojure">
```clojure
"#'user/freqs-plot"

```
</div>

```clojure
(portal-widget freqs-plot)
```
<div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:kindly{:kind :kind/vega-lite} {:encoding {:y {:field :freq, :type :quantitative}, :x {:field :date, :type :temporal}}, :mark :bar, :width :container, :background :floralwhite, :height 200, :data {:values ({:freq 1, :date \"2023-08-08\"} {:freq 2, :date \"2023-08-14\"} {:freq 1, :date \"2023-08-17\"} {:freq 2, :date \"2023-08-18\"} {:freq 9, :date \"2023-08-19\"} {:freq 1, :date \"2023-08-20\"} {:freq 5, :date \"2023-08-21\"} {:freq 2, :date \"2023-08-22\"} {:freq 1, :date \"2023-08-23\"} {:freq 1, :date \"2023-09-11\"} {:freq 4, :date \"2023-09-12\"} {:freq 3, :date \"2023-09-13\"} {:freq 3, :date \"2023-09-14\"} {:freq 3, :date \"2023-09-15\"} {:freq 9, :date \"2023-09-18\"} {:freq 4, :date \"2023-09-19\"} {:freq 7, :date \"2023-09-20\"})}}")}
                , document.currentScript.parentElement);</script></div>
```clojure
freqs-plot
```
<div style="width:100%;"><script>vegaEmbed(document.currentScript.parentElement, {"encoding":{"y":{"field":"freq","type":"quantitative"},"x":{"field":"date","type":"temporal"}},"mark":"bar","width":"container","background":"floralwhite","height":200,"data":{"values":[{"freq":1,"date":"2023-08-08"},{"freq":2,"date":"2023-08-14"},{"freq":1,"date":"2023-08-17"},{"freq":2,"date":"2023-08-18"},{"freq":9,"date":"2023-08-19"},{"freq":1,"date":"2023-08-20"},{"freq":5,"date":"2023-08-21"},{"freq":2,"date":"2023-08-22"},{"freq":1,"date":"2023-08-23"},{"freq":1,"date":"2023-09-11"},{"freq":4,"date":"2023-09-12"},{"freq":3,"date":"2023-09-13"},{"freq":3,"date":"2023-09-14"},{"freq":3,"date":"2023-09-15"},{"freq":9,"date":"2023-09-18"},{"freq":4,"date":"2023-09-19"},{"freq":7,"date":"2023-09-20"}]}});</script></div>