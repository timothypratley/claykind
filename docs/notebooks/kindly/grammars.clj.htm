<!DOCTYPE html>
<html><head><link href="style.css" rel="stylesheet" type="text/css"><script src="https://unpkg.com/react@18/umd/react.production.min.js" type="text/javascript"></script><script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js" type="text/javascript"></script><script src="https://scicloj.github.io/scittle/js/scittle.js" type="text/javascript"></script><script src="https://scicloj.github.io/scittle/js/scittle.reagent.js" type="text/javascript"></script><script src="https://cdn.jsdelivr.net/npm/vega@5" type="text/javascript"></script><script src="https://cdn.jsdelivr.net/npm/vega-lite@5" type="text/javascript"></script><script src="https://cdn.jsdelivr.net/npm/vega-embed@6" type="text/javascript"></script><script src="portal-main.js" type="text/javascript"></script></head><body><script type="application/x-scittle">(ns main
            (:require [reagent.core :as r]
                      [reagent.dom :as dom]))</script><div><pre><code>(ns kindly.grammars
  (:require [clojure.java.io :as io]
            [malli.core :as ma])
  (:import (javax.imageio ImageIO)))</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector nil]]")}
                , document.currentScript.parentElement);</script></div></div><div></div><div></div><div></div><div></div><div></div><div><pre><code>(def hiccup-table
  ^:kindly/hiccup
  [:table
   [:tr [:td 1] [:td 2]]
   [:tr [:td 3] [:td 4]]])</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/var\"]] [:portal.viewer/inspector ^{:line 93, :column 3, :file \"/Users/timothypratley/git/claykind/src/scicloj/clay/publish.clj\", :name hiccup-table, :ns #object[clojure.lang.Namespace 0x261e8ff \"kindly.grammars\"]} #'kindly.grammars/hiccup-table]]")}
                , document.currentScript.parentElement);</script></div></div><div></div><div></div><div><pre><code>(def Hiccup
  [:schema {:registry {"hiccup" [:orn
                                 [:node [:catn
                                         [:name keyword?]
                                         [:props [:? [:map-of keyword? any?]]]
                                         [:children [:* [:schema [:ref "hiccup"]]]]]]
                                 [:primitive [:orn
                                              [:nil nil?]
                                              [:boolean boolean?]
                                              [:number number?]
                                              [:text string?]]]]}}
   "hiccup"])</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/var\"]] [:portal.viewer/inspector ^{:line 93, :column 3, :file \"/Users/timothypratley/git/claykind/src/scicloj/clay/publish.clj\", :name Hiccup, :ns #object[clojure.lang.Namespace 0x261e8ff \"kindly.grammars\"]} #'kindly.grammars/Hiccup]]")}
                , document.currentScript.parentElement);</script></div></div><div></div><div><pre><code>(def parse-hiccup (ma/parser Hiccup))</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/var\"]] [:portal.viewer/inspector ^{:line 93, :column 3, :file \"/Users/timothypratley/git/claykind/src/scicloj/clay/publish.clj\", :name parse-hiccup, :ns #object[clojure.lang.Namespace 0x261e8ff \"kindly.grammars\"]} #'kindly.grammars/parse-hiccup]]")}
                , document.currentScript.parentElement);</script></div></div><div><pre><code>(parse-hiccup hiccup-table)</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "[^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :node]] {^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :name]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :table]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :props]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector nil]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :children]] [[^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :node]] {^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :name]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :tr]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :props]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector nil]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :children]] [[^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :node]] {^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :name]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :td]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :props]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector nil]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :children]] [[^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :primitive]] [^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :number]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector 1]]]]]}] [^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :node]] {^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :name]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :td]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :props]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector nil]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :children]] [[^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :primitive]] [^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :number]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector 2]]]]]}]]}] [^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :node]] {^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :name]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :tr]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :props]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector nil]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :children]] [[^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :node]] {^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :name]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :td]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :props]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector nil]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :children]] [[^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :primitive]] [^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :number]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector 3]]]]]}] [^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :node]] {^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :name]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :td]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :props]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector nil]], ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :children]] [[^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :primitive]] [^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :number]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector 4]]]]]}]]}]]}]")}
                , document.currentScript.parentElement);</script></div></div><div></div><div></div><div><pre><code>^:kind/table
{:headers     []
 :row-vectors []}</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/table\"]] [:portal.viewer/inspector ^#:kind{:table true} {:headers [], :row-vectors []}]]")}
                , document.currentScript.parentElement);</script></div></div><div><pre><code>^:kind/table
{:headers     []
 :row-maps []}</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/table\"]] [:portal.viewer/inspector ^#:kind{:table true} {:row-maps [], :headers []}]]")}
                , document.currentScript.parentElement);</script></div></div><div><pre><code>^:kind/table
[[1 2]
 [3 4]]</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/table\"]] [:portal.viewer/inspector ^#:kind{:table true} [[1 2] [3 4]]]]")}
                , document.currentScript.parentElement);</script></div></div><div></div><div><pre><code>'(tabulate values)</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "(^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector tabulate]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector values]])")}
                , document.currentScript.parentElement);</script></div></div><div><pre><code>'(tabulate headers values)</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "(^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector tabulate]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector headers]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector values]])")}
                , document.currentScript.parentElement);</script></div></div><div></div><div></div><div><pre><code>(def Table
  [:schema {:registry {"table" ['...]}}
   "table"])</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/var\"]] [:portal.viewer/inspector ^{:line 93, :column 3, :file \"/Users/timothypratley/git/claykind/src/scicloj/clay/publish.clj\", :name Table, :ns #object[clojure.lang.Namespace 0x261e8ff \"kindly.grammars\"]} #'kindly.grammars/Table]]")}
                , document.currentScript.parentElement);</script></div></div><div></div><div></div><div><pre><code>(defn vega-lite-point-plot [data]
  ^:kind/vega-lite
  {:data {:values data},
   :mark "point"
   :encoding
   {:size {:field "w" :type "quantitative"}
    :x    {:field "x", :type "quantitative"},
    :y    {:field "y", :type "quantitative"},
    :fill {:field "z", :type "nominal"}}})</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/var\"]] [:portal.viewer/inspector ^{:arglists ([data]), :line 93, :column 3, :file \"/Users/timothypratley/git/claykind/src/scicloj/clay/publish.clj\", :name vega-lite-point-plot, :ns #object[clojure.lang.Namespace 0x261e8ff \"kindly.grammars\"]} #'kindly.grammars/vega-lite-point-plot]]")}
                , document.currentScript.parentElement);</script></div></div><div><pre><code>(defn random-data [n]
  (->> (repeatedly n #(- (rand) 0.5))
       (reductions +)
       (map-indexed (fn [x y]
                      {:w (rand-int 9)
                       :z (rand-int 9)
                       :x x
                       :y y}))))</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/var\"]] [:portal.viewer/inspector ^{:arglists ([n]), :line 93, :column 3, :file \"/Users/timothypratley/git/claykind/src/scicloj/clay/publish.clj\", :name random-data, :ns #object[clojure.lang.Namespace 0x261e8ff \"kindly.grammars\"]} #'kindly.grammars/random-data]]")}
                , document.currentScript.parentElement);</script></div></div><div><pre><code>(defn random-vega-lite-plot [n]
  (-> n
      random-data
      vega-lite-point-plot))</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div [:p \"unimplemented kind\" [:code \":kind/var\"]] [:portal.viewer/inspector ^{:arglists ([n]), :line 93, :column 3, :file \"/Users/timothypratley/git/claykind/src/scicloj/clay/publish.clj\", :name random-vega-lite-plot, :ns #object[clojure.lang.Namespace 0x261e8ff \"kindly.grammars\"]} #'kindly.grammars/random-vega-lite-plot]]")}
                , document.currentScript.parentElement);</script></div></div><div><pre><code>^:kind/vega-lite
(random-vega-lite-plot 9)</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:portal.viewer/vega-lite ^#:kind{:vega-lite true} {:encoding {:y {:field \"y\", :type \"quantitative\"}, :fill {:field \"z\", :type \"nominal\"}, :size {:field \"w\", :type \"quantitative\"}, :x {:field \"x\", :type \"quantitative\"}}, :mark \"point\", :data {:values ({:y -0.12325878126802037, :w 2, :z 3, :x 0} {:y 0.02758052626835228, :w 6, :z 4, :x 1} {:y -0.175082854584812, :w 5, :z 5, :x 2} {:y -0.15372971172532623, :w 6, :z 8, :x 3} {:y -0.17537405767467762, :w 3, :z 2, :x 4} {:y -0.08275822613744888, :w 2, :z 8, :x 5} {:y -0.2638810314906346, :w 0, :z 8, :x 6} {:y -0.3689262622042667, :w 2, :z 4, :x 7} {:y -0.7779636976725179, :w 7, :z 7, :x 8})}}]")}
                , document.currentScript.parentElement);</script></div></div><div></div><div></div><div></div><div></div><div></div><div><pre><code>(ImageIO/read (io/file "claykind.png"))</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "#object[\"[B\" 0x176b985c \"[B@176b985c\"]")}
                , document.currentScript.parentElement);</script></div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div><pre><code>^:kindly/markdown
(str "## This... is... " :Markdown)</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector \"## This... is... :Markdown\"]]")}
                , document.currentScript.parentElement);</script></div></div><div></div><div></div><div><pre><code>{:this #{"is"}
 'data [1 2 3 nil]}</code></pre><div><script>portal.extensions.vs_code_notebook.activate().renderOutputItem(
                {"mime": "x-application/edn",
                 "text": (() => "{^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector :this]] #{^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector \"is\"]]}, ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector data]] [^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector 1]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector 2]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector 3]] ^#:portal.viewer{:default :portal.viewer/hiccup} [:div nil [:portal.viewer/inspector nil]]]}")}
                , document.currentScript.parentElement);</script></div></div><div></div></body></html>